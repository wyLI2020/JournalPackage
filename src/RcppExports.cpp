// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// f_D_est
arma::mat f_D_est(int N, arma::mat Xawith1, arma::vec beta_est);
RcppExport SEXP _QuantileDSAR_f_D_est(SEXP NSEXP, SEXP Xawith1SEXP, SEXP beta_estSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_est(beta_estSEXP);
    rcpp_result_gen = Rcpp::wrap(f_D_est(N, Xawith1, beta_est));
    return rcpp_result_gen;
END_RCPP
}
// f_ASD_varphi
arma::mat f_ASD_varphi(arma::vec tauseq, int N, arma::mat Xawith1, arma::vec varthetahat, arma::vec betactilde, arma::mat varphitauhatM, arma::mat Dtilde);
RcppExport SEXP _QuantileDSAR_f_ASD_varphi(SEXP tauseqSEXP, SEXP NSEXP, SEXP Xawith1SEXP, SEXP varthetahatSEXP, SEXP betactildeSEXP, SEXP varphitauhatMSEXP, SEXP DtildeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varthetahat(varthetahatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betactilde(betactildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphitauhatM(varphitauhatMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Dtilde(DtildeSEXP);
    rcpp_result_gen = Rcpp::wrap(f_ASD_varphi(tauseq, N, Xawith1, varthetahat, betactilde, varphitauhatM, Dtilde));
    return rcpp_result_gen;
END_RCPP
}
// f_ASD_beta
arma::vec f_ASD_beta(arma::vec tauK, int N, int T, arma::mat Xawith1, arma::vec varthetahat, arma::vec betahat, arma::mat varphitauKhatM, arma::mat Dhat);
RcppExport SEXP _QuantileDSAR_f_ASD_beta(SEXP tauKSEXP, SEXP NSEXP, SEXP TSEXP, SEXP Xawith1SEXP, SEXP varthetahatSEXP, SEXP betahatSEXP, SEXP varphitauKhatMSEXP, SEXP DhatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauK(tauKSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varthetahat(varthetahatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betahat(betahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphitauKhatM(varphitauKhatMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Dhat(DhatSEXP);
    rcpp_result_gen = Rcpp::wrap(f_ASD_beta(tauK, N, T, Xawith1, varthetahat, betahat, varphitauKhatM, Dhat));
    return rcpp_result_gen;
END_RCPP
}
// f_score_b
arma::vec f_score_b(int b, arma::vec indicatorb, int N, int T, int p, int q, arma::mat W, arma::vec Y, arma::mat Ztilde, arma::mat Xawith1, arma::vec zetahat);
RcppExport SEXP _QuantileDSAR_f_score_b(SEXP bSEXP, SEXP indicatorbSEXP, SEXP NSEXP, SEXP TSEXP, SEXP pSEXP, SEXP qSEXP, SEXP WSEXP, SEXP YSEXP, SEXP ZtildeSEXP, SEXP Xawith1SEXP, SEXP zetahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type indicatorb(indicatorbSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ztilde(ZtildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zetahat(zetahatSEXP);
    rcpp_result_gen = Rcpp::wrap(f_score_b(b, indicatorb, N, T, p, q, W, Y, Ztilde, Xawith1, zetahat));
    return rcpp_result_gen;
END_RCPP
}
// f_ASD_zeta
arma::vec f_ASD_zeta(int Bnum, arma::mat scoreBnum, int N, int T, int p, int q, arma::mat W, arma::vec Y, arma::mat Ztilde, arma::mat Xawith1, arma::vec zetahat);
RcppExport SEXP _QuantileDSAR_f_ASD_zeta(SEXP BnumSEXP, SEXP scoreBnumSEXP, SEXP NSEXP, SEXP TSEXP, SEXP pSEXP, SEXP qSEXP, SEXP WSEXP, SEXP YSEXP, SEXP ZtildeSEXP, SEXP Xawith1SEXP, SEXP zetahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Bnum(BnumSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type scoreBnum(scoreBnumSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ztilde(ZtildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zetahat(zetahatSEXP);
    rcpp_result_gen = Rcpp::wrap(f_ASD_zeta(Bnum, scoreBnum, N, T, p, q, W, Y, Ztilde, Xawith1, zetahat));
    return rcpp_result_gen;
END_RCPP
}
// f_zeta_hat
arma::vec f_zeta_hat(int N, int T, arma::mat W, arma::vec Y, arma::mat Ztilde, arma::mat Xawith1, arma::vec deltahat);
RcppExport SEXP _QuantileDSAR_f_zeta_hat(SEXP NSEXP, SEXP TSEXP, SEXP WSEXP, SEXP YSEXP, SEXP ZtildeSEXP, SEXP Xawith1SEXP, SEXP deltahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ztilde(ZtildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type deltahat(deltahatSEXP);
    rcpp_result_gen = Rcpp::wrap(f_zeta_hat(N, T, W, Y, Ztilde, Xawith1, deltahat));
    return rcpp_result_gen;
END_RCPP
}
// f_vartheta_hat
arma::vec f_vartheta_hat(arma::vec zetahat, int N, int T, arma::mat W, arma::vec Y, arma::mat Ztilde);
RcppExport SEXP _QuantileDSAR_f_vartheta_hat(SEXP zetahatSEXP, SEXP NSEXP, SEXP TSEXP, SEXP WSEXP, SEXP YSEXP, SEXP ZtildeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type zetahat(zetahatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ztilde(ZtildeSEXP);
    rcpp_result_gen = Rcpp::wrap(f_vartheta_hat(zetahat, N, T, W, Y, Ztilde));
    return rcpp_result_gen;
END_RCPP
}
// f_betac_tilde
arma::vec f_betac_tilde(arma::mat varphitautildeM);
RcppExport SEXP _QuantileDSAR_f_betac_tilde(SEXP varphitautildeMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type varphitautildeM(varphitautildeMSEXP);
    rcpp_result_gen = Rcpp::wrap(f_betac_tilde(varphitautildeM));
    return rcpp_result_gen;
END_RCPP
}
// f_weights_rq
arma::vec f_weights_rq(int N, arma::mat Xawith1, arma::vec betactilde);
RcppExport SEXP _QuantileDSAR_f_weights_rq(SEXP NSEXP, SEXP Xawith1SEXP, SEXP betactildeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betactilde(betactildeSEXP);
    rcpp_result_gen = Rcpp::wrap(f_weights_rq(N, Xawith1, betactilde));
    return rcpp_result_gen;
END_RCPP
}
// wqrLF
double wqrLF(arma::vec varphi, int N, arma::vec y, arma::mat x, double tau, arma::vec weights);
RcppExport SEXP _QuantileDSAR_wqrLF(SEXP varphiSEXP, SEXP NSEXP, SEXP ySEXP, SEXP xSEXP, SEXP tauSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(wqrLF(varphi, N, y, x, tau, weights));
    return rcpp_result_gen;
END_RCPP
}
// f_beta_hat
arma::vec f_beta_hat(arma::vec tauK, int N, arma::mat Xawith1, arma::vec varthetahat, arma::vec betactilde, arma::mat varphitauKhatM);
RcppExport SEXP _QuantileDSAR_f_beta_hat(SEXP tauKSEXP, SEXP NSEXP, SEXP Xawith1SEXP, SEXP varthetahatSEXP, SEXP betactildeSEXP, SEXP varphitauKhatMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauK(tauKSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varthetahat(varthetahatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betactilde(betactildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphitauKhatM(varphitauKhatMSEXP);
    rcpp_result_gen = Rcpp::wrap(f_beta_hat(tauK, N, Xawith1, varthetahat, betactilde, varphitauKhatM));
    return rcpp_result_gen;
END_RCPP
}
// RCPPlnlOFdelta
double RCPPlnlOFdelta(arma::vec delta, int N, int T, arma::mat W, arma::vec Y, arma::mat Ztilde, arma::mat Xawith1);
RcppExport SEXP _QuantileDSAR_RCPPlnlOFdelta(SEXP deltaSEXP, SEXP NSEXP, SEXP TSEXP, SEXP WSEXP, SEXP YSEXP, SEXP ZtildeSEXP, SEXP Xawith1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ztilde(ZtildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xawith1(Xawith1SEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPlnlOFdelta(delta, N, T, W, Y, Ztilde, Xawith1));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_QuantileDSAR_f_D_est", (DL_FUNC) &_QuantileDSAR_f_D_est, 3},
    {"_QuantileDSAR_f_ASD_varphi", (DL_FUNC) &_QuantileDSAR_f_ASD_varphi, 7},
    {"_QuantileDSAR_f_ASD_beta", (DL_FUNC) &_QuantileDSAR_f_ASD_beta, 8},
    {"_QuantileDSAR_f_score_b", (DL_FUNC) &_QuantileDSAR_f_score_b, 11},
    {"_QuantileDSAR_f_ASD_zeta", (DL_FUNC) &_QuantileDSAR_f_ASD_zeta, 11},
    {"_QuantileDSAR_f_zeta_hat", (DL_FUNC) &_QuantileDSAR_f_zeta_hat, 7},
    {"_QuantileDSAR_f_vartheta_hat", (DL_FUNC) &_QuantileDSAR_f_vartheta_hat, 6},
    {"_QuantileDSAR_f_betac_tilde", (DL_FUNC) &_QuantileDSAR_f_betac_tilde, 1},
    {"_QuantileDSAR_f_weights_rq", (DL_FUNC) &_QuantileDSAR_f_weights_rq, 3},
    {"_QuantileDSAR_wqrLF", (DL_FUNC) &_QuantileDSAR_wqrLF, 6},
    {"_QuantileDSAR_f_beta_hat", (DL_FUNC) &_QuantileDSAR_f_beta_hat, 6},
    {"_QuantileDSAR_RCPPlnlOFdelta", (DL_FUNC) &_QuantileDSAR_RCPPlnlOFdelta, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_QuantileDSAR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
